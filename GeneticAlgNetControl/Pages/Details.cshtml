@page
@model DetailsModel
@{
    ViewData["Title"] = "Details";
    ViewData["ActivePage"] = "Dashboard";
}

<div class="flex-grow-1 p-4 d-flex flex-column current-page-details item-details">
    <div class="container my-2 sticky-top">
        <div class="card px-5 pt-3 pt-lg-0 shadow-sm">
            <div class="row align-items-center">
                <div class="col-lg-6 text-center text-lg-left">
                    <span class="font-weight-bold">Details</span>
                </div>
                <div class="col-lg-6 navbar navbar-light">
                    <div class="navbar-nav flex-row flex-wrap align-items-center justify-content-center justify-content-lg-end w-100">
                        <a asp-page="/Create" asp-route-id="@Model.View.Id" class="nav-item nav-link mx-2" title="Copy">
                            <span><i class="fas fa-copy"></i></span>
                        </a>
                        @if (Model.View.Status == Data.Enumerations.AnalysisStatus.Stopped)
                        {
                            <a asp-page="/Start" asp-route-id="@Model.View.Id" class="nav-item nav-link mx-2" title="Start">
                                <span><i class="fas fa-play"></i></span>
                            </a>
                        }
                        @if (Model.View.Status == Data.Enumerations.AnalysisStatus.Initializing || Model.View.Status == Data.Enumerations.AnalysisStatus.Ongoing)
                        {
                            <a asp-page="/Stop" asp-route-id="@Model.View.Id" class="nav-item nav-link mx-2" title="Stop">
                                <span><i class="fas fa-stop"></i></span>
                            </a>
                        }
                        @if (Model.View.Status == Data.Enumerations.AnalysisStatus.Stopped || Model.View.Status == Data.Enumerations.AnalysisStatus.Completed)
                        {
                            <a asp-page="/Save" asp-route-id="@Model.View.Id" class="nav-item nav-link mx-2" title="Save">
                                <span><i class="fas fa-save"></i></span>
                            </a>
                        }
                        @if (Model.View.Status == Data.Enumerations.AnalysisStatus.Scheduled || Model.View.Status == Data.Enumerations.AnalysisStatus.Stopped || Model.View.Status == Data.Enumerations.AnalysisStatus.Completed)
                        {
                            <a asp-page="/Delete" asp-route-id="@Model.View.Id" class="nav-item nav-link mx-2" title="Delete">
                                <span><i class="fas fa-trash"></i></span>
                            </a>
                        }
                        <a asp-page="/Dashboard" class="nav-item nav-link mx-2" title="Dashboard">
                            <span><i class="fas fa-chart-bar"></i></span>
                        </a>
                        <a asp-page="/About" class="nav-item nav-link mx-2" title="About">
                            <span><i class="fas fa-question-circle"></i></span>
                        </a>
                        <a asp-page="/Index" class="nav-item nav-link mx-2" title="Home">
                            <span><i class="fas fa-home"></i></span>
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="container my-2">
        <div class="card shadow-sm">
            <div class="card-body">
                <div class="row align-items-center">
                    <div class="col-lg-2 col-xl-1 text-center">
                        <span title="Details"><i class="fas fa-font fa-2x"></i></span>
                        <hr class="d-block d-lg-none" />
                    </div>
                    <div class="col-lg-6 col-xl-6 text-center text-lg-left">
                        <div class="font-weight-bold text-uppercase">
                            <span title="@Model.View.Name" class="item-details-name">@Model.View.Name</span>
                        </div>
                        <div class="small text-muted">
                            <span title="@Model.View.Id" class="item-details-id">@Model.View.Id</span>
                        </div>
                    </div>
                    <div class="col-lg-4 col-xl-5 text-center text-lg-right">
                        <hr class="d-block d-lg-none" />
                        @switch (Model.View.Status)
                        {
                            case Data.Enumerations.AnalysisStatus.Scheduled:
                                <span class="text-warning item-details-status-icon" title="@Model.View.Status.ToString()"><i class="fas fa-clock fa-2x"></i></span>
                                break;
                            case Data.Enumerations.AnalysisStatus.Initializing:
                                <span class="text-dark item-details-status-icon" title="@Model.View.Status.ToString()"><i class="fas fa-stopwatch fa-2x"></i></span>
                                break;
                            case Data.Enumerations.AnalysisStatus.Ongoing:
                                <span class="text-primary item-details-status-icon" title="@Model.View.Status.ToString()"><i class="fas fa-spinner fa-spin fa-2x"></i></span>
                                break;
                            case Data.Enumerations.AnalysisStatus.Stopping:
                                <span class="text-secondary item-details-status-icon" title="@Model.View.Status.ToString()"><i class="fas fa-pause-circle fa-2x"></i></span>
                                break;
                            case Data.Enumerations.AnalysisStatus.Stopped:
                                <span class="text-danger item-details-status-icon" title="@Model.View.Status.ToString()"><i class="fas fa-stop-circle fa-2x"></i></span>
                                break;
                            case Data.Enumerations.AnalysisStatus.Completed:
                                <span class="text-success item-details-status-icon" title="@Model.View.Status.ToString()"><i class="fas fa-check-circle fa-2x"></i></span>
                                break;
                            default:
                                break;
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="container my-2">
        <div class="row align-items-center">
            <div class="col-lg-4 mb-1 mb-lg-0">
                <div class="card shadow-sm" title="Date started">
                    <div class="card-body">
                        <div class="row align-items-center">
                            <div class="col-xl-3 text-center">
                                <span><i class="fas fa-hourglass-start fa-2x"></i></span>
                                <hr class="d-xl-none" />
                            </div>
                            <div class="col-xl-9 text-center">
                                @{
                                    var timeStarted = Model.View.DateTimeStarted;
                                }
                                @if (timeStarted == null)
                                {
                                    <span title="Not started yet." class="font-weight-bold item-details-date-time-started">--:--:-- --</span>
                                }
                                else
                                {
                                    <span title="@timeStarted.Value.ToString()" class="font-weight-bold item-details-date-time-started">@timeStarted.Value.ToLongTimeString()</span>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-lg-4 my-1 my-lg-0">
                <div class="card shadow-sm" title="Time elapsed">
                    <div class="card-body">
                        <div class="row align-items-center">
                            <div class="col-xl-3 text-center">
                                <span><i class="fas fa-hourglass-half fa-2x"></i></span>
                                <hr class="d-xl-none" />
                            </div>
                            <div class="col-xl-9 text-center">
                                @{
                                    var timeSpan = Model.View.DateTimeSpan;
                                }
                                <span title="@timeSpan.ToString()" class="font-weight-bold item-details-time-span">@timeSpan.ToString("dd\\:hh\\:mm\\:ss")</span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-lg-4 mt-1 mt-lg-0">
                <div class="card shadow-sm" title="Date ended">
                    <div class="card-body">
                        <div class="row align-items-center">
                            <div class="col-xl-3 text-center">
                                <span><i class="fas fa-hourglass-end fa-2x"></i></span>
                                <hr class="d-xl-none" />
                            </div>
                            <div class="col-xl-9 text-center">
                                @{
                                    var timeEnded = Model.View.DateTimeEnded;
                                }
                                @if (timeEnded == null)
                                {
                                    <span title="Not ended yet." class="font-weight-bold item-details-date-time-ended">--:--:-- --</span>
                                }
                                else
                                {
                                    <span title="@timeEnded.Value.ToString()" class="font-weight-bold item-details-date-time-ended">@timeEnded.Value.ToLongTimeString()</span>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="container my-2">
        <div class="row align-items-center">
            <div class="col-lg-4 mb-1 mb-lg-0">
                <div class="card shadow-sm" title="Iterations">
                    <div class="card-body">
                        <div class="row align-items-center">
                            <div class="col-xl-3 text-center">
                                <span><i class="fas fa-fast-forward fa-2x"></i></span>
                                <hr class="d-xl-none" />
                            </div>
                            <div class="col-xl-9 text-center">
                                <span title="@Model.View.CurrentIteration / @Model.View.Parameters.MaximumIterations" class="item-details-current-iteration">@Model.View.CurrentIteration / @Model.View.Parameters.MaximumIterations</span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-lg-4 my-1 my-lg-0">
                <div class="card shadow-sm" title="Iterations without improvement">
                    <div class="card-body">
                        <div class="row align-items-center">
                            <div class="col-xl-3 text-center">
                                <span><i class="fas fa-forward fa-2x"></i></span>
                                <hr class="d-xl-none" />
                            </div>
                            <div class="col-xl-9 text-center">
                                <span title="@Model.View.CurrentIterationWithoutImprovement / @Model.View.Parameters.MaximumIterationsWithoutImprovement" class="item-details-current-iteration-without-improvement">@Model.View.CurrentIterationWithoutImprovement / @Model.View.Parameters.MaximumIterationsWithoutImprovement</span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-lg-4 mt-1 mt-lg-0">
                <div class="card shadow-sm" title="Status">
                    <div class="card-body">
                        <div class="row align-items-center">
                            <div class="col-xl-3 text-center">
                                @switch (Model.View.Status)
                                {
                                    case Data.Enumerations.AnalysisStatus.Scheduled:
                                        <span class="text-warning item-details-status-icon" title="@Model.View.Status.ToString()"><i class="fas fa-clock fa-2x"></i></span>
                                        break;
                                    case Data.Enumerations.AnalysisStatus.Initializing:
                                        <span class="text-dark item-details-status-icon" title="@Model.View.Status.ToString()"><i class="fas fa-stopwatch fa-2x"></i></span>
                                        break;
                                    case Data.Enumerations.AnalysisStatus.Ongoing:
                                        <span class="text-primary item-details-status-icon" title="@Model.View.Status.ToString()"><i class="fas fa-spinner fa-spin fa-2x"></i></span>
                                        break;
                                    case Data.Enumerations.AnalysisStatus.Stopping:
                                        <span class="text-secondary item-details-status-icon" title="@Model.View.Status.ToString()"><i class="fas fa-pause-circle fa-2x"></i></span>
                                        break;
                                    case Data.Enumerations.AnalysisStatus.Stopped:
                                        <span class="text-danger item-details-status-icon" title="@Model.View.Status.ToString()"><i class="fas fa-stop-circle fa-2x"></i></span>
                                        break;
                                    case Data.Enumerations.AnalysisStatus.Completed:
                                        <span class="text-success item-details-status-icon" title="@Model.View.Status.ToString()"><i class="fas fa-check-circle fa-2x"></i></span>
                                        break;
                                    default:
                                        break;
                                }
                                <hr class="d-xl-none" />
                            </div>
                            <div class="col-xl-9 text-center">
                                <span title="@Model.View.Status.ToString()" class="item-details-status">@Model.View.Status.ToString()</span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    @if (Model.View.Solutions.Any())
    {
        <div class="container my-2">
            <div class="card shadow-sm">
                <div class="card-body">
                    <div class="chart-js-chart" data-chart-type="line">
                        <span class="chart-js-data" hidden>@JsonSerializer.Serialize(new { AverageFitness = Model.View.HistoricAverageFitness, BestFitness = Model.View.HistoricBestFitness })</span>
                        <canvas class="chart-js-canvas"></canvas>
                    </div>
                </div>
            </div>
        </div>
        <div class="container my-2">
            <div class="card shadow-sm">
                <div class="card-body">
                    <table class="table table-light table-striped table-hover table-bordered table-datatable" data-order="[[2, &quot;desc&quot;]]">
                        <thead class="thead-light">
                            <tr>
                                <th>
                                    <span>Input node</span>
                                </th>
                                <th>
                                    <span>Reachable target nodes</span>
                                </th>
                                <th>
                                    <span>#</span>
                                </th>
                                <th data-sortable="false">
                                    <span></span>
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @{
                                var solution = Model.View.Solutions.First();
                            }
                            @foreach (var inputNode in solution.UniqueInputNodes)
                            {
                                var currentTargetNodes = solution.Genes.Where(item => item.Value == inputNode).Select(item => item.Key);
                                var currentCount = currentTargetNodes.Count();
                                var currentPercentage = currentCount * 100 / solution.Genes.Count();
                                <tr>
                                    <td>
                                        <span>@inputNode</span>
                                        @if (Model.View.PreferredNodes.Contains(inputNode))
                                        {
                                            <span>(preferred)</span>
                                        }
                                    </td>
                                    <td>
                                        <span>@string.Join(", ", currentTargetNodes)</span>
                                    </td>
                                    <td>
                                        <span>@currentCount</span>
                                    </td>
                                    <td>
                                        <div class="progress">
                                            <div class="progress-bar" style="width: @currentPercentage%">
                                                <span>@currentCount / @solution.Genes.Count()</span>
                                            </div>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    }
    <div class="container my-2">
        <div class="nav row align-items-center">
            <a href="#item-details-tab-pane-nodes" class="col-lg-3 mb-1 mb-xl-0 nav-link tab-link text-secondary active" data-toggle="tab" title="Nodes">
                <div class="card shadow-sm">
                    <div class="card-body">
                        <div class="row align-items-center">
                            <div class="col-xl-6 text-center">
                                <span><i class="fas fa-circle fa-2x"></i></span>
                                <hr class="d-xl-none" />
                            </div>
                            <div class="col-xl-6 text-center">
                                <span>@Model.View.Nodes.Count()</span>
                            </div>
                        </div>
                    </div>
                </div>
            </a>
            <a href="#item-details-tab-pane-edges" class="col-lg-3 mb-1 mb-xl-0 nav-link tab-link text-secondary" data-toggle="tab" title="Edges">
                <div class="card shadow-sm">
                    <div class="card-body">
                        <div class="row align-items-center">
                            <div class="col-xl-6 text-center">
                                <span><i class="fas fa-arrows-alt-h fa-2x"></i></span>
                                <hr class="d-xl-none" />
                            </div>
                            <div class="col-xl-6 text-center">
                                <span>@Model.View.Edges.Count()</span>
                            </div>
                        </div>
                    </div>
                </div>
            </a>
            <a href="#item-details-tab-pane-target-nodes" class="col-lg-3 mb-1 mb-xl-0 nav-link tab-link text-secondary" data-toggle="tab" title="Target nodes">
                <div class="card shadow-sm">
                    <div class="card-body">
                        <div class="row align-items-center">
                            <div class="col-xl-6 text-center">
                                <span><i class="fas fa-bullseye fa-2x"></i></span>
                                <hr class="d-xl-none" />
                            </div>
                            <div class="col-xl-6 text-center">
                                <span>@Model.View.TargetNodes.Count()</span>
                            </div>
                        </div>
                    </div>
                </div>
            </a>
            <a href="#item-details-tab-pane-preferred-nodes" class="col-lg-3 mb-1 mb-xl-0 nav-link tab-link text-secondary" data-toggle="tab" title="Preferred nodes">
                <div class="card shadow-sm">
                    <div class="card-body">
                        <div class="row align-items-center">
                            <div class="col-xl-6 text-center">
                                <span><i class="fas fa-heart fa-2x"></i></span>
                                <hr class="d-xl-none" />
                            </div>
                            <div class="col-xl-6 text-center">
                                <span>@Model.View.PreferredNodes.Count()</span>
                            </div>
                        </div>
                    </div>
                </div>
            </a>
        </div>
        <div class="tab-content mt-2">
            <div id="item-details-tab-pane-nodes" class="tab-pane fade show active">
                <div class="card shadow-sm">
                    <div class="card-body">
                        <table class="table table-light table-striped table-hover table-bordered table-datatable text-center">
                            <thead class="thead-light">
                                <tr>
                                    <th>
                                        <span>Node name</span>
                                    </th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model.View.Nodes)
                                {
                                    <tr>
                                        <td>
                                            <span>@item</span>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
            <div id="item-details-tab-pane-edges" class="tab-pane fade">
                <div class="card shadow-sm">
                    <div class="card-body">
                        <table class="table table-light table-striped table-hover table-bordered table-datatable text-center">
                            <thead class="thead-light">
                                <tr>
                                    <th>
                                        <span>Source node name</span>
                                    </th>
                                    <th>
                                        <span>Target node name</span>
                                    </th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model.View.Edges)
                                {
                                    <tr>
                                        <td>
                                            <span>@item.SourceNode</span>
                                        </td>
                                        <td>
                                            <span>@item.TargetNode</span>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
            <div id="item-details-tab-pane-target-nodes" class="tab-pane fade">
                <div class="card shadow-sm">
                    <div class="card-body">
                        <table class="table table-light table-striped table-hover table-bordered table-datatable text-center">
                            <thead class="thead-light">
                                <tr>
                                    <th>
                                        <span>Node name</span>
                                    </th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model.View.TargetNodes)
                                {
                                    <tr>
                                        <td>
                                            <span>@item</span>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
            <div id="item-details-tab-pane-preferred-nodes" class="tab-pane fade">
                <div class="card shadow-sm">
                    <div class="card-body">
                        <table class="table table-light table-striped table-hover table-bordered table-datatable text-center">
                            <thead class="thead-light">
                                <tr>
                                    <th>
                                        <span>Node name</span>
                                    </th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model.View.PreferredNodes)
                                {
                                    <tr>
                                        <td>
                                            <span>@item</span>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="container my-2">
        <div class="card shadow-sm">
            <div class="card-body">
                <div class="row">
                    <div class="col-lg-4 order-1 order-lg-1 align-self-center">
                        <label asp-for="View.Parameters.RandomSeed" class="font-weight-bold">Random seed</label>
                    </div>
                    <div class="col-lg-4 order-1 order-lg-2 mb-3">
                        <input asp-for="View.Parameters.RandomSeed" class="form-control form-control-plaintext" disabled />
                    </div>
                    <div class="col-lg-4 order-2 order-lg-1 align-self-center">
                        <label asp-for="View.Parameters.MaximumIterations" class="font-weight-bold">Maximum iterations</label>
                    </div>
                    <div class="col-lg-4 order-2 order-lg-2 mb-3">
                        <input asp-for="View.Parameters.MaximumIterations" class="form-control form-control-plaintext" disabled />
                    </div>
                    <div class="col-lg-4 order-3 order-lg-1 align-self-center">
                        <label asp-for="View.Parameters.MaximumIterationsWithoutImprovement" class="font-weight-bold">Maximum iterations without improvement</label>
                    </div>
                    <div class="col-lg-4 order-3 order-lg-2 mb-3">
                        <input asp-for="View.Parameters.MaximumIterationsWithoutImprovement" class="form-control form-control-plaintext" disabled />
                    </div>
                </div>
                <div class="row">
                    <div class="col-lg-4 order-1 order-lg-1 align-self-center">
                        <label asp-for="View.Parameters.MaximumPathLength" class="font-weight-bold">Maximum path length</label>
                    </div>
                    <div class="col-lg-4 order-1 order-lg-2 mb-3">
                        <input asp-for="View.Parameters.MaximumPathLength" class="form-control form-control-plaintext" disabled />
                    </div>
                    <div class="col-lg-4 order-2 order-lg-1 align-self-center">
                        <label asp-for="View.Parameters.PopulationSize" class="font-weight-bold">Population size</label>
                    </div>
                    <div class="col-lg-4 order-2 order-lg-2 mb-3">
                        <input asp-for="View.Parameters.PopulationSize" class="form-control form-control-plaintext" disabled />
                    </div>
                    <div class="col-lg-4 order-3 order-lg-1 align-self-center">
                        <label asp-for="View.Parameters.RandomGenesPerChromosome" class="font-weight-bold">Random genes per chromosome</label>
                    </div>
                    <div class="col-lg-4 order-3 order-lg-2 mb-3">
                        <input asp-for="View.Parameters.RandomGenesPerChromosome" class="form-control form-control-plaintext" disabled />
                    </div>
                </div>
                <div class="row">
                    <div class="col-lg-4 order-1 order-lg-1 align-self-center">
                        <label asp-for="View.Parameters.PercentageRandom" class="font-weight-bold">Percentage of random chromosomes</label>
                    </div>
                    <div class="col-lg-4 order-1 order-lg-2 mb-3">
                        <input asp-for="View.Parameters.PercentageRandom" class="form-control form-control-plaintext" disabled />
                    </div>
                    <div class="col-lg-4 order-2 order-lg-1 align-self-center">
                        <label asp-for="View.Parameters.PercentageElite" class="font-weight-bold">Percentage of elite chromosomes</label>
                    </div>
                    <div class="col-lg-4 order-2 order-lg-2 mb-3">
                        <input asp-for="View.Parameters.PercentageElite" class="form-control form-control-plaintext" disabled />
                    </div>
                    <div class="col-lg-4 order-3 order-lg-1 align-self-center">
                        <label asp-for="View.Parameters.ProbabilityMutation" class="font-weight-bold">Probability of mutation</label>
                    </div>
                    <div class="col-lg-4 order-3 order-lg-2 mb-3">
                        <input asp-for="View.Parameters.ProbabilityMutation" class="form-control form-control-plaintext" disabled />
                    </div>
                </div>
                <div class="row">
                    <div class="col-lg-6 order-1 order-lg-1 align-self-center">
                        <label asp-for="View.Parameters.CrossoverType" class="font-weight-bold">Crossover type</label>
                    </div>
                    <div class="col-lg-6 order-1 order-lg-2 mb-3">
                        <select asp-for="View.Parameters.CrossoverType" asp-items="Html.GetEnumSelectList<Data.Enumerations.AnalysisCrossoverType>()" class="form-control form-control-plaintext" disabled></select>
                    </div>
                    <div class="col-lg-6 order-2 order-lg-1 align-self-center">
                        <label asp-for="View.Parameters.MutationType" class="font-weight-bold">Mutation type</label>
                    </div>
                    <div class="col-lg-6 order-2 order-lg-2 mb-3">
                        <select asp-for="View.Parameters.MutationType" asp-items="Html.GetEnumSelectList<Data.Enumerations.AnalysisMutationType>()" class="form-control form-control-plaintext" disabled></select>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
